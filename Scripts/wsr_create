#!/bin/sh
set -e
# PURPOSE OF THIS SCRIPT
# This script is meant to speed up the weekly process of creating a WSR or similar texts.
# Especially users who maintain a remote wiki for those documents should profit. 
# For a user who is only focused on writing an email this script should not benefit him.
# 
# This script creates a WSR file, opens an editor, on close of the editor an email is sketched and help for maintaining the remote wiki repository is offered.
#
# If this script speeded up the WSR managment for you aswell, I'd love to hear from you.
# Regards Marvin


###
### The following variable you need to change.
###


#The Name that is shown at the end of the WSR file
name="Marvin"


###
### The following variables you may wanna change.
###


#Path where the local wiki repository is stored
local_wiki_repository="$HOME/Projects/wsr.wiki"

#Relativ Path to $local_directory were the WSR file should be stored
path_wsr_file_directory="."

#Path to the editor to use
editor=typora

#The default structure of the WSR file
default_file_name="$(date +"WSR%G-W%U")"
default_file_name_extension="md"


###
### The gitlab_name and repository_name you need to change if you wanna include a link to the remote wiki repository WSR file in your WSR email.
###


#Only used when Option GITLAB_LINK is set to true...
#My Gitlab name 
gitlab_name="mmann"

#Only used when Option GITLAB_LINK is set to true...
#My Gitlab repository where the remote wiki lives
repository_name="wsr"

#Only used when Option GITLAB_LINK is set to true...
#Path to the remote wiki repository
remote_wiki="https://gitlab.vpn.cyberus-technology.de/$gitlab_name/$repository_name/-/wikis"


###
### Options - These options match the main use case for user that maintain a wiki. Feel free tho set them to false if the don't match your use case.
###


# Include a link to the remote wiki in your WSR email
# true = include it
# false = don't include it
GITLAB_LINK=true

# Once you leave the editor and the email is opend it is assumed, that your next step in the shell is to push the newly added file to your remote wiki repository.
# Additinaly it is assumed that the link that was included in the email is of no need in the wiki and so the script attempts to remove the line containing the link before you push it to the remote wiki repository.
# true = remove the link in the WSR file
# false = don't remove the link in the WSR file 
ASK_TO_REMOVE_LINK=true

# Right before the script is done - head to your local wiki repository.
# you immediately wanna push your changes to the remote wiki repository (adds target of the link included in the file)
# true = cds to the directory $dir
# false = doesn't change the shell's current location
CD_AFTER_EDDITING=true

CP_AND_OPEN_HOME_FILE=true


###
### Execution starts - The following code you should not need to touch
###

echo "Please type the name of the WSR file to be created aka openend in case the file already exists.\n Please note the default_file_name_extension will be added automatically.\nPress ENTER to use the default name.\n(default name: $default_file_name)"
read -r custom_file_name

if test -z "$custom_file_name" ; then
    file_name="$default_file_name"
else
    file_name="$custom_file_name"
fi


if test -f "$local_wiki_repository/$path_wsr_file_directory/$file_name$default_file_name_extension"; then
    file_existed_before=true
else
    file_existed_before=false
fi

link_to_file="$wiki/$(echo "$file_name" | sed "s/\s\+/%/g")"

addToWSR(){
    if ! "$file_existed_before"; then
        text="$1"
        echo "$text" >> "$local_wiki_repository/$path_wsr_file_directory/$file_name$default_file_name_extension"
    fi
}

addToWSRWhenConditionTrue(){
    if ! "$file_existed_before"; then
        text="$1"
        condition="$2"
        if "$condition" ; then
            echo "$text" >> "$local_wiki_repository/$path_wsr_file_directory/$file_name$default_file_name_extension"
        fi
    fi
}


###
### The following functions you may wanna change to alter the initial content of the WSR
###


greeting(){
    echo "Hi Team,

    "
}

remainingMessage(){
    echo "## tl;dr  
-  


That's it.  

Have a wonderful week  
$name"
}

###
### The following code you should not need to touch but in the case of tweaking the position of the link. 
###

addToWSR "$(greeting)"

addToWSRWhenConditionTrue "$link_to_file" "$GITLAB_LINK"

addToWSR "$(remainingMessage)"

"$editor" "$local_wiki_repository/$path_wsr_file_directory/$file_name$default_file_name_extension"

done_edditing(){
    echo "Are you done making changes to the file and ready to create the email sketch?\nPlease type y or n"
    read -r answer_done_edditing_question

    case "$answer_done_edditing_question" in
        y)
            #thunderbird -compose "subject='$file_name',to='team@cyberus-technology.de',body='$(cat "$local_directory/$file_name")'"&

            if "$CD_AFTER_EDDITING"; then
                cd "$local_wiki_repository" || echo "couldn't access local wiki repository"
            fi

            if "$ASK_TO_REMOVE_LINK"; then
                ask_user(){
                    echo "Do you wanna remove the link to the wiki from the local file?\nPlease type y or n"
                    read -r answer_on_question_to_remove_link

                    case "$answer_on_question_to_remove_link" in
                        y)
                            sed -i "/$link_to_file/d" "$local_wiki_repository/$path_wsr_file_directory/$file_name$default_file_name_extension" || echo nano
                            ;;
                        n)
                            ;;
                        *)
                            ask_user;;
                    esac
                }
                ask_user
            fi

            if "$CP_AND_OPEN_HOME_FILE"; then
                echo "[$file_name]($path_wsr_file_directory/$file_name)" | xclip -sel c || echo "Please check if you installed xclip"
                "$editor" "$local_wiki_repository/home.md"
            fi
            ;;
        n)
            ;;
        *)
            done_edditing;;
    esac
}
done_edditing
